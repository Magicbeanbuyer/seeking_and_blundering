version: 2.1

jobs:
  lint-code:
    docker:
      - image: magicbeanbuyer/circleci-images:1.2.0
        auth:
          username: $USERNAME
          password: $PASSWORD
    steps:
      - checkout
      - run:
          name: "print path"
          command: |
            echo $PATH
            go version
            ls
      - run:
          name: "pre-commit"
          command: pre-commit install
      #      - run:
      #          name: "Setup Environment Variables"
      #          command: echo "export PATH=/usr/local/go/bin:$PATH" >> $BASH_ENV
      #      - run:
      #          name: "check path"
      #          command: |
      #            echo $PWD
      #            echo $(ls)
      #      - run:
      #          name: "install golang"
      #          command: |
      #            sudo apt install software-properties-common gpg
      #            sudo add-apt-repository ppa:longsleep/golang-backports
      #            sudo apt update
      #            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6BC817356A3D45E
      #            sudo apt install golang-go
      #      - run:
      #          name: "install pre-commit and commitizen"
      #          command: ./git_enhancement.sh circleci
      #      - run:
      #          name: "lint code and commit message"
      #          command: |
      #            pre-commit run --hook-stage manual --from-ref << pipeline.git.base_revision >> --to-ref << pipeline.git.revision >>
      #            cz check --rev-range << pipeline.git.base_revision >>..<< pipeline.git.revision >>
      - persist_to_workspace:
          root: /root
          paths:
            - project

  check-data-persistance:
    docker:
      - image: magicbeanbuyer/circleci-images:1.2.0
        auth:
          username: $USERNAME
          password: $PASSWORD
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: "temp"
          command: |
            echo $PWD
            echo $(ls)

workflows:
  main:
    jobs:
      - lint-code:
          name: "lint code"
          context: [DOCKER_HUB]
      - check-data-persistance:
          name: "check data persistence"
          context: [DOCKER_HUB]
          requires:
            - "lint code"
